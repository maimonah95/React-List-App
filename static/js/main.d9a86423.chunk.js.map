{"version":3,"sources":["components/OneContry.js","components/ListCountry.js","components/FavItem.js","components/fav.js","App.js","serviceWorker.js","index.js"],"names":["OneContry","className","scope","this","props","country","name","type","onClick","add","capital","region","languages","currencies","timezones","src","flag","Component","ListCountry","state","newTasks","map","data","index","key","placeholder","value","cName","onChange","handleChange","SearchCountry","FavItem","handleChek","e","ischeckedHandle","isChecked","setState","handleHide","console","log","hideToolTips","love","delete","ItemName","id","modifyItemName","target","modify","checked","handleDeletedChange","Fav","FavCou","SavedCountry","length","deleteAll","deletedSelectedItem","App","leftCountry","MyList","filter","item","deleted","indexOf","myList","filtredList","focus","axios","method","url","then","res","CurrentCountry","code","Countries","catch","err","to","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d9a86423.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./../App.css\";\nimport { IoMdAdd } from \"react-icons/io\";\nexport default class OneContry extends Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n\n  //   };\n  // }\n  render() {\n    return (\n      <table className=\"table table-hover\">\n        <thead>\n          <tr>\n            <th scope=\"col\">{this.props.country.name}</th>\n            <th scope=\"col\">\n              Information\n              <button\n                type=\"button\"\n                className=\"Add-to-list\"\n                onClick={() => this.props.add(this.props.country)}\n              >\n                <IoMdAdd />\n              </button>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th scope=\"row\">Capital</th>\n            <td>{this.props.country.capital}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Region</th>\n            <td>{this.props.country.region}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">languages</th>\n            <td>{this.props.country.languages}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">currencies</th>\n            <td> {this.props.country.currencies}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Time</th>\n            <td> {this.props.country.timezones}</td>\n          </tr>\n          <tr>\n            <th scope=\"row\">Flag</th>\n            <td>\n              <img src={`${this.props.country.flag}`} />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport OneCountry from \"./OneContry\";\nimport { IoMdSearch } from \"react-icons/io\";\nexport default class ListCountry extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  // Map country that user search on \n  render() {\n    let newTasks = this.props.country.map((data, index) => {\n      return (\n        <div>\n          <OneCountry country={data} key={data.name} add={this.props.add} />\n        </div>\n      );\n    });\n    return (\n      <div>\n        <div className=\"listCountry\">\n          <input\n            className=\"InputCountry\"\n            type=\"text\"\n            placeholder=\"Enter country Name\"\n            value={this.props.cName}\n            onChange={this.props.handleChange}\n          />\n          <button\n            className=\"ButtonCountry\"\n            onClick={() => this.props.SearchCountry()}\n          >\n            <IoMdSearch/>\n          </button>\n        </div>\n        {newTasks}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { IoIosTrash } from \"react-icons/io\";\nimport { IoMdEye } from \"react-icons/io\";\nimport { IoMdHeart } from \"react-icons/io\";\nimport { IoMdHeartHalf } from \"react-icons/io\";\nexport default class FavItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hideToolTips: \"none\",\n      isChecked: false\n    };\n  }\n  handleChek = e => {\n    const ischeckedHandle = !this.state.isChecked;\n    this.setState({ isChecked: ischeckedHandle });\n  };\n  //Mark the item as complete/favorite/(watch\n  //to choose className (when user click watch item the rest of information will apeaar) class disply or none\n  handleHide = e => {\n    console.log(\"hi\");\n    if (this.state.hideToolTips === \"none\") {\n      this.setState({ hideToolTips: \"display\" });\n    } else {\n      this.setState({ hideToolTips: \"none\" });\n    }\n  };\n  //the div color depending on country variable\n  render() {\n    if (this.props.country.love === \"Heart\") {\n      return (\n        <div>\n          <div className=\"favItemRed\">\n            <button\n              className=\"DeletNum\"\n              onClick={() => this.props.delete(this.props.country)}\n            >\n              <IoIosTrash />\n            </button>\n\n            <br />\n            <input\n              type=\"text\"\n              value={this.props.country.ItemName}\n              id={this.props.country}\n              onChange={e =>\n                this.props.modifyItemName(this.props.country, e.target.value)\n              }\n            />\n\n            <br />\n            <button className=\"Watch\" onClick={this.handleHide}>\n              <IoMdEye />\n            </button>\n            <button\n              className=\"modify\"\n              onClick={() => this.props.modify(this.props.country)}\n            >\n              <IoMdHeart />\n            </button>\n            <input\n              className=\"selectedItem\"\n              type=\"checkbox\"\n              checked={this.state.isChecked}\n              value={this.props.country}\n              onChange={() => {\n                this.props.handleDeletedChange(\n                  this.props.country,\n                  this.state.isChecked\n                );\n                this.handleChek();\n              }}\n            />\n            <div className={`Toggle-filter-${this.state.hideToolTips}`}>\n              <br />\n              {this.props.country.name}\n              <br />\n              <br />\n              Capital : {this.props.country.capital}\n              <br />\n              Region :{this.props.country.region}\n              <br />\n              Languages :{this.props.country.languages}\n              <br />\n              currencies :{this.props.country.currencies}\n              <br />\n              Time: {this.props.country.timezones}\n              <br />\n              love: {this.props.country.love}\n              <br />\n              <img src={`${this.props.country.flag}`} />\n            </div>\n          </div>\n        </div>\n      );\n    } else if (this.props.country.love === \"NotHeart\") {\n      return (\n        <div>\n          <div className=\"favItemBlue\">\n            <button\n              className=\"DeletNum\"\n              onClick={() => this.props.delete(this.props.country)}\n            >\n              <IoIosTrash />\n            </button>\n            <input\n              type=\"text\"\n              value={this.props.country.ItemName}\n              id={this.props.country}\n              onChange={e =>\n                this.props.modifyItemName(this.props.country, e.target.value)\n              }\n            />\n            <button className=\"Watch\" onClick={this.handleHide}>\n              <IoMdEye />\n            </button>\n            <button\n              className=\"modify\"\n              onClick={() => this.props.modify(this.props.country)}\n            >\n              <IoMdHeartHalf />\n            </button>\n            <input\n              className=\"selectedItem\"\n              type=\"checkbox\"\n              checked={this.state.isChecked}\n              value={this.props.country}\n              onChange={() => {\n                this.props.handleDeletedChange(\n                  this.props.country,\n                  this.state.isChecked\n                );\n                this.handleChek();\n              }}\n            />\n            <div className={`Toggle2-filter-${this.state.hideToolTips}`}>\n              <br />\n              {this.props.country.name}\n              <br />\n              <br />\n              Capital : {this.props.country.capital}\n              <br />\n              Region :{this.props.country.region}\n              <br />\n              Languages :{this.props.country.languages}\n              <br />\n              currencies :{this.props.country.currencies}\n              <br />\n              Time: {this.props.country.timezones}\n              <br />\n              love: {this.props.country.love}\n              <br />\n              <img src={`${this.props.country.flag}`} />\n            </div>\n          </div>\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport FavItem from \"./FavItem\";\nimport { IoIosTrash } from \"react-icons/io\";\nexport default class Fav extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  //Map countries that user saved\n  render() {\n    const FavCou = this.props.SavedCountry.map((data, index) => {\n      return (\n        <div>\n          <FavItem\n            country={data}\n            key={index}\n            add={this.props.add}\n            delete={this.props.delete}\n            modify={this.props.modify}\n            modifyItemName={this.props.modifyItemName}\n            handleDeletedChange={this.props.handleDeletedChange}\n          />\n        </div>\n      );\n    });\n    //if the array is not Empty the button will appear\n    if (this.props.SavedCountry.length !== 0) {\n      return (\n        <div className=\"deletAll\">\n          <button className=\"delAll\" onClick={() => this.props.deleteAll()}>\n            <IoIosTrash />\n            <br />\n            delete all\n          </button>\n          <br/>\n          <button\n            className=\"delSelectedItem\"\n            onClick={this.props.deletedSelectedItem}\n          >\n            <IoIosTrash />\n            <br />\n            delete Selected Item\n          </button>\n          {FavCou}\n        </div>\n      );\n    } else {\n      return <div> {FavCou}</div>;\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport Listcountry from \"./components/ListCountry\";\nimport Fav from \"./components/fav\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cName: \"\",\n      Countries: [],\n      MyList: []\n    };\n  }\n  deletedSelectedItem = () => {\nconst leftCountry=this.state.MyList.filter((item)=>{\nreturn item.delete!==true\n})\nthis.setState({ MyList: leftCountry });\n  }\n\n  handleDeletedChange = (country, e) => {\n          console.log(country);\n    const deleted = [...this.state.MyList];\n    let index = deleted.indexOf(country);\n    if (e) {\n   deleted[index].delete = false;\n    } else {\ndeleted[index].delete = true;\n    }\n    this.setState({ MyList: deleted });\n  };\n  //Edit an item from a list 1\n  //Modify object variable\n  modify = country => {\n    if (country.love === \"Heart\") {\n      const myList = this.state.MyList;\n      myList.map(item => {\n        if (item.name === country.name) {\n          item.love = \"NotHeart\";\n        }\n      });\n      this.setState({\n        MyList: myList\n      });\n    } else {\n      const myList = this.state.MyList;\n      myList.map(item => {\n        if (item.name === country.name) {\n          item.love = \"Heart\";\n        }\n      });\n      this.setState({\n        MyList: myList\n      });\n    }\n  };\n  //Edit an item from a list 2\n  //modify the Item Name (name that is display to the user)\n  modifyItemName = (country, e) => {\n    const myList = this.state.MyList;\n    myList.map(item => {\n      if (item.name === country.name) {\n        item.ItemName = e;\n      }\n    });\n    this.setState({\n      MyList: myList\n    });\n  };\n  //Remove an item from a list\n  delete = country => {\n    console.log(\"finally\");\n    const filtredList = this.state.MyList.filter(item => item !== country);\n    this.setState({\n      MyList: filtredList\n    });\n  };\n  //Clear/delete all items\n  deleteAll = () => {\n    console.log(\"finally2\");\n    // const filtredList = this.state.MyList.filter(item => item !== country);\n    this.setState({\n      MyList: []\n    });\n  };\n  //Add a new item to a list\n  add = country => {\n    console.log(\"wpppp\");\n    console.log(country.love);\n    const Add = [...this.state.MyList];\n    const countryIndex = Add.indexOf(country);\n    if (countryIndex !== -1) {\n      console.log(` this ${country.name} Exist`);\n    } else {\n      console.log(\"added\");\n      this.setState({\n        MyList: [...this.state.MyList, country]\n      });\n    }\n    console.log(country.name);\n  };\n  // handle input text\n  handleChange = e => {\n    //e.preventDefault();\n    this.setState({\n      cName: e.target.value\n    });\n    e.target.focus();\n  };\n  //Fetch data from 3rd party(using axios)\n  SearchCountry = () => {\n    console.log(\"Searching ....\");\n    axios({\n      method: \"Get\",\n      // url: `https://restcountries.eu/rest/v2/name/saudi`\n      url: `https://restcountries.eu/rest/v2/name/${this.state.cName}`\n    })\n      .then(res => {\n        console.log(\"name\" + res.data[0].name);\n        const CurrentCountry = {\n          ItemName: res.data[0].name,\n          name: res.data[0].name,\n          region: res.data[0].region,\n          languages: res.data[0].languages[0].name,\n          capital: res.data[0].capital,\n          currencies: res.data[0].currencies[0].code,\n          timezones: res.data[0].timezones[0],\n          flag: res.data[0].flag,\n          love: \"Heart\" //IoMdHeart // IoMdHeartHalf\n        };\n        this.setState({\n          Countries: [CurrentCountry],\n          cName: \" \"\n        });\n      })\n      .catch(err => {\n        console.log(\"ERROR: \", err);\n      });\n  };\n  render() {\n    return (\n      <div className=\"style\">\n        <Router>\n          <div>\n            <div className=\"link\">\n              <Link className=\"links\" to=\"/List\">\n                Country\n              </Link>{\" \"}\n              {\"  |  \"}\n              <Link className=\"links\" to=\"/Fav\">\n                Saved Country\n              </Link>{\" \"}\n              {\"   \"}\n            </div>\n            <br />\n            <br />\n            <Route\n              path=\"/List\"\n              render={() => (\n                <Listcountry\n                  country={this.state.Countries}\n                  add={this.add}\n                  SearchCountry={this.SearchCountry}\n                  handleChange={this.handleChange}\n                  cName={this.state.cName}\n                />\n              )}\n            />\n            <Route\n              path=\"/Fav\"\n              render={() => (\n                <Fav\n                  SavedCountry={this.state.MyList}\n                  delete={this.delete}\n                  deleteAll={this.deleteAll}\n                  modify={this.modify}\n                  modifyItemName={this.modifyItemName}\n                  handleDeletedChange={this.handleDeletedChange}\n                  deletedSelectedItem={this.deletedSelectedItem}\n                />\n              )}\n            />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from './serviceWorker';\n// import \nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}